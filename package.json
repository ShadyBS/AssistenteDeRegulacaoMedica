{
  "name": "assistente-de-regulacao-medica",
  "version": "4.0.0",
  "description": "Extensão para auxiliar na regulação médica.",
  "main": "sidebar.js",
  "scripts": {
    "dev": "webpack --mode=development --watch",
    "build": "node scripts/build.js",
    "build:chrome": "node scripts/build.js --target=chrome",
    "build:firefox": "node scripts/build.js --target=firefox",
    "build:edge": "node scripts/build.js --target=edge",
    "build:all": "npm run build:chrome && npm run build:firefox && npm run build:edge",
    "build:optimized": "NODE_ENV=production npm run build:all",
    "build:analyze": "NODE_ENV=production webpack --env analyze=true --mode=production",
    "build:analyze:chrome": "NODE_ENV=production webpack --env target=chrome --env analyze=true --mode=production",
    "build:analyze:firefox": "NODE_ENV=production webpack --env target=firefox --env analyze=true --mode=production",
    "build:analyze:edge": "NODE_ENV=production webpack --env target=edge --env analyze=true --mode=production",
    "build:css": "tailwindcss -i ./src/input.css -o ./dist/output.css --minify",
    "build:css:watch": "tailwindcss -i ./src/input.css -o ./dist/output.css --watch",
    "build:css:optimized": "NODE_ENV=production tailwindcss -i ./src/input.css -o ./dist/output.css --minify",
    "build:zips": "node build-zips-clean.js",
    "build:zips:clean": "node build-zips-clean.js",
    "build:production": "npm run build:css:optimized && npm run build:optimized && npm run build:zips:clean",
    "validate": "npm run validate:encoding && npm run validate:manifests && npm run validate:security && node scripts/validate.js",
    "validate:encoding": "node scripts/validate-encoding.js",
    "validate:manifests": "node -e \"require('./build-zips-clean.js').validateManifest('manifest.json'); require('./build-zips-clean.js').validateManifest('manifest-edge.json'); console.log('✅ Manifests válidos')\"",
    "validate:security": "npm audit --audit-level=moderate",
    "validate:permissions": "node -e \"const m1=require('./manifest.json'); const m2=require('./manifest-edge.json'); console.log('🔒 Permissions audit:'); console.log('Firefox:', JSON.stringify(m1.permissions||[])); console.log('Chrome/Edge:', JSON.stringify(m2.permissions||[])); console.log('✅ Permissions validated')\"",
    "validate:csp": "node -e \"const m1=require('./manifest.json'); const m2=require('./manifest-edge.json'); const csp1=m1.content_security_policy?.extension_pages; const csp2=m2.content_security_policy?.extension_pages; if(!csp1||!csp2) throw new Error('CSP missing'); if(csp1.includes('unsafe')||csp2.includes('unsafe')) throw new Error('Unsafe CSP detected'); console.log('✅ CSP validated')\"",
    "validate:performance": "npm run size:check && echo '✅ Performance validation completed'",
    "fix:encoding": "node scripts/fix-encoding.js",
    "fix:encoding:dry": "node scripts/fix-encoding.js --dry-run",
    "validate:bundle": "npm run build:analyze && echo '📊 Bundle analysis completed'",
    "optimize": "npm run clean && npm run build:production",
    "optimize:analyze": "npm run clean && npm run build:css:optimized && npm run build:analyze && npm run build:zips",
    "version:patch": "node scripts/version.js patch",
    "version:minor": "node scripts/version.js minor",
    "version:major": "node scripts/version.js major",
    "release": "node scripts/release.js",
    "release:patch": "npm run release -- $(npm version patch --no-git-tag-version | sed 's/v//')",
    "release:minor": "npm run release -- $(npm version minor --no-git-tag-version | sed 's/v//')",
    "release:major": "npm run release -- $(npm version major --no-git-tag-version | sed 's/v//')",
    "release:dry": "node scripts/release.js --dry-run",
    "upload:chrome": "node scripts/store-upload.js --target=chrome",
    "upload:firefox": "node scripts/store-upload.js --target=firefox",
    "upload:edge": "node scripts/store-upload.js --target=edge",
    "upload:all": "npm run upload:chrome && npm run upload:firefox && npm run upload:edge",
    "clean": "rimraf .dist dist-zips dist node_modules/.cache",
    "clean:cache": "rimraf node_modules/.cache .babel-cache",
    "clean:all": "npm run clean && rimraf coverage/ .nyc_output/",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "lint": "eslint . --ext .js --ignore-path .gitignore",
    "lint:fix": "eslint . --ext .js --ignore-path .gitignore --fix",
    "lint:security": "eslint . --ext .js --config .eslintrc.security.js",
    "size:check": "npm run build:optimized && node -e \"const fs=require('fs'); const path=require('path'); const getSize=p=>{try{return fs.statSync(p).size}catch{return 0}}; const chrome=getSize('.dist/chrome.zip'); const firefox=getSize('.dist/firefox.zip'); console.log('📦 Bundle sizes:'); console.log('Chrome:', Math.round(chrome/1024), 'KB'); console.log('Firefox:', Math.round(firefox/1024), 'KB'); if(chrome>10485760||firefox>10485760) {console.error('❌ Bundle too large'); process.exit(1)} else {console.log('✅ Bundle sizes OK')}\"",
    "performance:analyze": "npm run build:analyze && echo '📊 Performance analysis completed'",
    "performance:budget": "npm run size:check && npm run performance:analyze",
    "security:scan": "npm audit && npm run validate:security",
    "security:fix": "npm audit fix",
    "ci:validate": "npm run validate && npm run lint && npm run security:scan",
    "ci:test": "npm run test:ci",
    "ci:build": "npm run build:production",
    "ci:package": "npm run build:zips:clean",
    "ci:deploy": "npm run upload:all",
    "pre:commit": "npm run ci:validate && npm run ci:build",
    "validate:commit": "npm run pre:commit && echo '✅ Ready for commit'",
    "safe:commit": "npm run validate:commit && git add . && echo 'Files staged for commit. Run: git commit -m \"your message\"'"
  },
  "keywords": [
    "browser-extension",
    "medical-regulation",
    "healthcare",
    "sigss"
  ],
  "author": "ShadyBS",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/ShadyBS/AssistenteDeRegulacaoMedica.git"
  },
  "bugs": {
    "url": "https://github.com/ShadyBS/AssistenteDeRegulacaoMedica/issues"
  },
  "homepage": "https://github.com/ShadyBS/AssistenteDeRegulacaoMedica#readme",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "@octokit/rest": "^20.0.2",
    "archiver": "^7.0.1",
    "autoprefixer": "^10.4.21",
    "babel-loader": "^10.0.0",
    "babel-plugin-transform-remove-console": "^6.9.4",
    "babel-plugin-transform-remove-debugger": "^6.9.4",
    "copy-webpack-plugin": "^11.0.0",
    "core-js": "^3.44.0",
    "css-loader": "^6.8.1",
    "cssnano": "^7.1.0",
    "dotenv": "^16.3.1",
    "eslint": "^8.55.0",
    "fs-extra": "^11.2.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.5",
    "mini-css-extract-plugin": "^2.7.6",
    "postcss": "^8.5.6",
    "postcss-loader": "^8.1.1",
    "rimraf": "^5.0.5",
    "semver": "^7.5.4",
    "simple-git": "^3.20.0",
    "tailwindcss": "^3.4.1",
    "terser-webpack-plugin": "^5.3.9",
    "webpack": "^5.89.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4"
  },
  "optionalDependencies": {
    "sharp": "^0.32.6"
  }
}
