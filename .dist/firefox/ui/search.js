import * as API from "../api.js";import * as Utils from "../utils.js";import{store}from "../store.js";import{validateCPF,validateCNS,validateBrazilianDate,validateSearchTerm}from '../validation.js';let searchInput;let searchResultsList;let recentPatientsList;let onSelectPatient;function renderSearchResults(patients){if(!searchResultsList)return;if(patients.length===0){searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-slate-500">Nenhum paciente encontrado.</li>`;return;}searchResultsList.innerHTML=patients .map((p)=> `<li class="px-4 py-3 border-b border-slate-100 hover:bg-slate-50 cursor-pointer transition" data-idp="${p.idp}" data-ids="${p.ids}">${renderPatientListItem(p)}</li>`).join("");}function renderRecentPatients(){if(!recentPatientsList)return;const recents=store.getRecentPatients()|| [];recentPatientsList.innerHTML='<li class="px-4 pt-3 pb-1 text-xs font-semibold text-slate-400">PACIENTES RECENTES</li>' +(recents.length===0 ? `<li class="px-4 py-3 text-sm text-slate-500">Nenhum paciente recente.</li>` : recents .map((p)=>{const fichaData=p.ficha || p;const idp=fichaData.isenPK?.idp || fichaData.idp;const ids=fichaData.isenPK?.ids || fichaData.ids;if(!idp || !ids)return "";return `<li class="px-4 py-3 border-b border-slate-100 hover:bg-slate-50 cursor-pointer transition recent-patient-item" data-idp="${idp}" data-ids="${ids}">${renderPatientListItem(fichaData)}</li>`;}).join(""));}function renderPatientListItem(patient){const nome=patient.value || Utils.getNestedValue(patient,"entidadeFisica.entidade.entiNome")|| "Nome não informado";const idp=patient.idp || patient.isenPK?.idp;const ids=patient.ids || patient.isenPK?.ids;const dataNascimento=patient.dataNascimento || Utils.getNestedValue(patient,"entidadeFisica.entfDtNasc");const cpf=patient.cpf || Utils.getNestedValue(patient,"entidadeFisica.entfCPF");const cns=patient.cns || patient.isenNumCadSus;return ` <div class="font-medium text-slate-800">${nome}</div> <div class="grid grid-cols-2 gap-x-4 text-xs text-slate-500 mt-1"> <span><strong class="font-semibold">Cód:</strong> ${idp}-${ids}</span> <span><strong class="font-semibold">Nasc:</strong> ${dataNascimento || "-"}</span> <span><strong class="font-semibold">CPF:</strong> ${cpf || "-"}</span> <span><strong class="font-semibold">CNS:</strong> ${cns || "-"}</span> </div> `;}function detectInputType(value){if(!value || typeof value !=='string')return 'text';const cleanValue=value.trim();if(/^\d{3}\.?\d{3}\.?\d{3}-?\d{2}$/.test(cleanValue)){return 'cpf';}if(/^\d{15}$/.test(cleanValue.replace(/\D/g,''))){return 'cns';}if(/^\d{1,2}\/\d{1,2}\/\d{2,4}$/.test(cleanValue)){return 'date';}if(/^\d{3}\.?\d{0,3}\.?\d{0,3}-?\d{0,2}$/.test(cleanValue)&& cleanValue.length >=7){return 'cpf';}if(/^\d{10,14}$/.test(cleanValue.replace(/\D/g,''))){return 'cns';}return 'text';}const handleSearchInput=Utils.debounce(async()=>{const searchTerm=searchInput.value.trim();store.clearPatient();recentPatientsList.classList.add("hidden");searchResultsList.classList.remove("hidden");if(searchTerm.length < 1){searchResultsList.innerHTML="";return;}const inputType=detectInputType(searchTerm);let validation={valid: true};switch(inputType){case 'cpf': validation=validateCPF(searchTerm);if(!validation.valid){searchInput.classList.add('border-red-500','bg-red-50');searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-red-600"> <div class="font-medium">CPF Inválido</div> <div class="text-xs mt-1">${validation.message}</div> </li>`;return;}break;case 'cns': validation=validateCNS(searchTerm);if(!validation.valid){searchInput.classList.add('border-red-500','bg-red-50');searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-red-600"> <div class="font-medium">CNS Inválido</div> <div class="text-xs mt-1">${validation.message}</div> </li>`;return;}break;case 'date': validation=validateBrazilianDate(searchTerm);if(!validation.valid){searchInput.classList.add('border-red-500','bg-red-50');searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-red-600"> <div class="font-medium">Data Inválida</div> <div class="text-xs mt-1">${validation.message}</div> <div class="text-xs mt-1 text-gray-500">Formato esperado: dd/mm/aaaa</div> </li>`;return;}break;case 'text': default: validation=validateSearchTerm(searchTerm);if(!validation.valid){searchInput.classList.add('border-red-500','bg-red-50');searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-red-600"> <div class="font-medium">Termo de Busca Inválido</div> <div class="text-xs mt-1">${validation.message}</div> </li>`;return;}break;}searchInput.classList.remove('border-red-500','bg-red-50');Utils.toggleLoader(true);try{const sanitizedTerm=validation.sanitized || searchTerm;const patients=await API.searchPatients(sanitizedTerm);renderSearchResults(patients);}catch(error){if(error.message.includes('Invalid search term')|| error.message.includes('CPF inválido')|| error.message.includes('CNS inválido')){searchResultsList.innerHTML=`<li class="px-4 py-3 text-sm text-red-600"> <div class="font-medium">Erro de Validação</div> <div class="text-xs mt-1">${error.message}</div> </li>`;}else{Utils.showMessage("Erro ao buscar pacientes.");}}finally{Utils.toggleLoader(false);}},500);function handleSearchFocus(){if(searchInput){searchInput.classList.remove('border-red-500','bg-red-50');}if(searchInput.value.length > 0)return;renderRecentPatients();searchResultsList.classList.add("hidden");recentPatientsList.classList.remove("hidden");}function handleSearchBlur(){setTimeout(()=>{searchResultsList.classList.add("hidden");recentPatientsList.classList.add("hidden");},200);}async function handleResultClick(event){const listItem=event.target.closest("li[data-idp]");if(!listItem)return;const{idp,ids}=listItem.dataset;if(listItem.classList.contains("recent-patient-item")){const recentPatient=store.getRecentPatients().find((p)=>{const patientIdp=p.ficha ? p.ficha.isenPK.idp : p.idp;return patientIdp==idp;});if(recentPatient && recentPatient.ficha){store.setPatient(recentPatient.ficha,recentPatient.cadsus);searchInput.value="";searchResultsList.classList.add("hidden");recentPatientsList.classList.add("hidden");return;}}if(onSelectPatient){onSelectPatient({idp,ids});}searchInput.value="";searchResultsList.classList.add("hidden");recentPatientsList.classList.add("hidden");}export function init(config){searchInput=document.getElementById("patient-search-input");searchResultsList=document.getElementById("search-results");recentPatientsList=document.getElementById("recent-patients-list");onSelectPatient=config.onSelectPatient;if(searchInput){searchInput.setAttribute('placeholder','Digite nome,CPF(000.000.000-00),CNS ou data(dd/mm/aaaa)');}store.subscribe(()=>{if(!recentPatientsList.classList.contains("hidden")){renderRecentPatients();}});searchInput.addEventListener("input",handleSearchInput);searchInput.addEventListener("focus",handleSearchFocus);searchInput.addEventListener("blur",handleSearchBlur);searchResultsList.addEventListener("click",handleResultClick);recentPatientsList.addEventListener("click",handleResultClick);}